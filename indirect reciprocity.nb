(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    108074,       2081]
NotebookOptionsPosition[    107014,       2058]
NotebookOutlinePosition[    107407,       2074]
CellTagsIndexPosition[    107364,       2071]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.818879757919106*^9, 3.8188797825897417`*^9}},
 CellLabel->
  "In[160]:=",ExpressionUUID->"d714b3ec-b484-4f33-88b9-d06f5f540d84"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Mean", " ", "frequencies", " ", "of", " ", "good", " ", "individuals"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"z", "=", 
     RowBox[{"1", "-", "x", "-", "y"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gxgood", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "gx"}], ")"}], "*", "\[Epsilon]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gxbad", "=", 
     RowBox[{"gx", "*", 
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Epsilon]"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gygood", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "gy"}], ")"}], "*", "e"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gybad", "=", 
     RowBox[{"gy", "*", 
      RowBox[{"(", 
       RowBox[{"1", "-", "e"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gzgood", "=", 
     RowBox[{
      RowBox[{"x", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", "gz"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"gx", "*", "\[Epsilon]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "gx"}], ")"}], "*", "e"}]}], ")"}]}], "+", 
      RowBox[{"y", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", "gz"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"gy", "*", "\[Epsilon]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "gy"}], ")"}], "*", "e"}]}], ")"}]}], "+", 
      RowBox[{"z", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", "gz"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"gz", "*", "\[Epsilon]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "gz"}], ")"}], "*", "e"}]}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gzbad", "=", 
     RowBox[{
      RowBox[{"x", "*", "gz", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"gx", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Epsilon]"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "gx"}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "e"}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{"y", "*", "gz", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"gy", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Epsilon]"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "gy"}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "e"}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{"z", "*", "gz", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"gz", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Epsilon]"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "gz"}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "e"}], ")"}]}]}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gx", "=", 
     RowBox[{"gx", "/.", 
      RowBox[{
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{"gxgood", "\[Equal]", "gxbad"}], ",", "gx"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gy", "=", 
     RowBox[{"gy", "/.", 
      RowBox[{
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{"gygood", "\[Equal]", "gybad"}], ",", "gy"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gz", "=", 
     RowBox[{"gz", "/.", 
      RowBox[{
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{"gzgood", "\[Equal]", "gzbad"}], ",", "gz"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"g", "=", 
      RowBox[{
       RowBox[{"fx", "*", "gx"}], "+", 
       RowBox[{"fy", "*", "gy"}], "+", 
       RowBox[{"fz", "*", "gz"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"g2", "=", 
      RowBox[{
       RowBox[{"fx", "*", 
        RowBox[{"gx", "^", "2"}]}], "+", 
       RowBox[{"fy", "*", 
        RowBox[{"gy", "^", "2"}]}], "+", 
       RowBox[{"fz", "*", 
        RowBox[{"gz", "^", "2"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"b2", "=", 
      RowBox[{"1", "-", 
       RowBox[{"2", "*", "g"}], "+", "g2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d2", "=", 
      RowBox[{"g", "-", "g2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Epsilon]", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "e1"}], ")"}], "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", "e2"}], ")"}]}], "+", 
       RowBox[{"e1", "*", "e2"}]}]}], ";"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.8188730041760902`*^9, 3.818873046871998*^9}, {
   3.8188731852104483`*^9, 3.818873201603306*^9}, {3.818874032910366*^9, 
   3.818874142647573*^9}, {3.818874247955144*^9, 3.8188743027732143`*^9}, {
   3.818874340257905*^9, 3.818874345373271*^9}, {3.818874718815608*^9, 
   3.818874771254171*^9}, {3.81887688941094*^9, 3.8188769159387093`*^9}, {
   3.818879141153254*^9, 3.818879141769299*^9}, {3.818880924754418*^9, 
   3.8188809355939074`*^9}, {3.820076524534143*^9, 3.820076569558676*^9}, {
   3.820076627868902*^9, 3.8200766586674967`*^9}, {3.820076829669919*^9, 
   3.82007708058278*^9}, {3.820077124127084*^9, 3.820077254350419*^9}, {
   3.820077392915873*^9, 3.8200774051675863`*^9}, {3.8200774388733*^9, 
   3.820077532803259*^9}, {3.820078074090938*^9, 3.82007807505534*^9}, {
   3.820079005317875*^9, 3.820079022574593*^9}, {3.820079122713838*^9, 
   3.820079161321858*^9}, 3.8213768789632998`*^9, {3.821378454728902*^9, 
   3.821378456608307*^9}, {3.821378823527327*^9, 
   3.8213788256829853`*^9}},ExpressionUUID->"3ee16a46-8bac-4457-920d-\
99ef21d1fb92"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Plot", " ", "numerical", " ", "solutions"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"e", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Epsilon]", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", "=", "3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gz", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], "*", "gx"}], "+", 
      RowBox[{
       RowBox[{"y", "[", "t", "]"}], "*", "gy"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"x", "[", "t", "]"}], "-", 
         RowBox[{"y", "[", "t", "]"}]}], ")"}], "*", "gz"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Px", "=", 
     RowBox[{
      RowBox[{"r", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"x", "[", "t", "]"}], "-", 
            RowBox[{"y", "[", "t", "]"}]}], ")"}], "*", "gx"}]}], ")"}]}], 
      "-", "1"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Py", "=", 
     RowBox[{"r", "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", "[", "t", "]"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"x", "[", "t", "]"}], "-", 
           RowBox[{"y", "[", "t", "]"}]}], ")"}], "*", "gy"}]}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Pz", "=", 
     RowBox[{
      RowBox[{"r", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"x", "[", "t", "]"}], "-", 
            RowBox[{"y", "[", "t", "]"}]}], ")"}], "*", "gz"}]}], ")"}]}], 
      "-", "g"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Pbar", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], "*", "Px"}], "+", 
      RowBox[{
       RowBox[{"y", "[", "t", "]"}], "*", "Py"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"x", "[", "t", "]"}], "-", 
         RowBox[{"y", "[", "t", "]"}]}], ")"}], "*", "Pz"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol", "=", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], "*", 
           RowBox[{"(", 
            RowBox[{"Px", "-", "Pbar"}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"y", "'"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{
           RowBox[{"y", "[", "t", "]"}], "*", 
           RowBox[{"(", 
            RowBox[{"Py", "-", "Pbar"}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "\[Equal]", "0.9"}], ",", 
         RowBox[{
          RowBox[{"y", "[", "0", "]"}], "\[Equal]", "0.01"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "1", ",", "2000"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"LogLinearPlot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", 
         RowBox[{"y", "[", "t", "]"}], ",", 
         RowBox[{"1", "-", 
          RowBox[{"x", "[", "t", "]"}], "-", 
          RowBox[{"y", "[", "t", "]"}]}]}], "}"}], "/.", "sol"}], "]"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"t", ",", "1", ",", "2000"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<AllC\>\"", ",", "\"\<AllD\>\"", ",", "\"\<Disc\>\""}], 
       "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8200780862400293`*^9, 3.820078115733251*^9}, {
   3.8200784380682898`*^9, 3.820078439873295*^9}, {3.8200784832641773`*^9, 
   3.820078692424501*^9}, {3.820078809684841*^9, 3.8200789691207848`*^9}, {
   3.820079050067513*^9, 3.82007910303897*^9}, {3.82007916656719*^9, 
   3.820079292242584*^9}, {3.8200793555787783`*^9, 3.820079357912587*^9}, 
   3.82007960221108*^9, 3.82007964852862*^9, 3.820079694199245*^9, {
   3.8200797910835133`*^9, 3.820079825344673*^9}, {3.8200808191411858`*^9, 
   3.820080830035296*^9}, 3.8200808604103394`*^9, {3.820080994475828*^9, 
   3.820080995757407*^9}, {3.820081463594954*^9, 3.8200814640921907`*^9}, {
   3.820081498500671*^9, 3.820081501041925*^9}, {3.820081615536837*^9, 
   3.8200816452765903`*^9}, 3.820081684901948*^9, {3.820081903277721*^9, 
   3.820081961945198*^9}, {3.8200821569241753`*^9, 3.820082204664462*^9}, {
   3.820082582957984*^9, 3.8200827070471487`*^9}, {3.8200827485596867`*^9, 
   3.820082759862939*^9}},
 CellLabel->
  "In[231]:=",ExpressionUUID->"45ce8b5e-5349-4f5d-85d0-903a1656a4a9"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
9E7fBh+7teqvbhY73NxYI1ZyeA8G9YD8sTJ2yPlz/c/Tkt34j62Ow9Fhdjgs
+P2LgKMF3l9Ivf5ggh1ESrVaXxea41q5bubnWXboLRa4Hi9vjgsGYteocXKA
edGprqWpHTgqcHiqV4IDBAsoVu/Lt2P2P+Xqoqs5QJFWvyhovB3773x0YJsi
B6x9/f6S9nsT7CJuWf5kHQcYgWxN4cdteOOrF/EHjTngkt2x/wIHjXEaPagy
2pQDfjr/9aFcMsYy5xwXi3dyQMzKPkV2mjHm3srrIW3PAVef9N1hEIB/Nnno
/DzCAQo7clXfehB4F2F0mNeXA7yfcihpphvh0mSRh3pnOUASech8n9iCXx0v
5bh9hQPi3k+Te24Z4iuc8vV74ln1D+fxfmUzwLqeIh+873NAjlzToLa3Ph74
xJN15TEHCCvFZXB818P2kUPRr59zgJULv9DznE14Hb3InI/kgCXRu0o693Rw
t1+GgXwpB/Dzh/5Wl9LBdxueqOpXcICMqXErz6ONmONeBLdnHQc45rMdRK+1
8U9Z+w8lvzlALYsT7WndgGMCzbOaBjhAPMBT+SXfBryt2yhxeIQDjtlF0Se2
aOKMZ0qXZOY5oOre2/zmjHU4bN2YQYAQJ7CfGTS/8kUdG8b0qt4Q4QTf0nzX
mNXqeHSkSTxVkhMMXZMSP59Ww85vmJPfFTnBrWDzMbd1qnijYVTWBn1OWF3y
xezxF2Xc//BKoqkRJ/ifH7t520gZP1ryizlgzAlvCeYqWrYSpnzYd+z6Tk5w
miy0ximKuH2HqlqfCycc/GAwZ5ktj+NfrJJY9uCE2HVRdTpG8ticX4hH7Agn
BJ2+VcqIl8O5NZM9W89wwu0sw6jg1tX4ul1p4uMIlj52r7pWxioM7/Ji8qI5
YX3IcLP9iBSelnxxqTqOE2QLI1r2bZLC7q039s8ncMJPa+89sd8ksMGhAxL2
2ZxwXMOb3rNZDA+XWfMcf8sJoUt1eqKJovjpGpOpkCJWv9SgzzspolhoQON7
djknTDbz7Tv6h4F7fWdjBJs5QX5fpvHabzQ8kBeQWd3OCa1nAuPOOtHwyPzs
t+s9nPAtL+bBnjphPB86R6MOccKjUIXJ5VVCmHZ/Po6HjQuyVbkSbYepWLz9
/JtyLi4o6jld0rKBiqWVFr6H8nHBnnNezYQ/H17zekGUU4QL7MwIq9V0Ct7y
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
e/nAgH38/l26MJJ3aDVfduSDsjfVmgeyBFGjo8Qj/UN8UF3V8rF4joq2OUdv
Sz/HB7o7BngzXbmRbJvG0KeLfMAVY/W+uI0TzR+ovNMTxAeKL0J2+ZhxoB/t
nsB2lQ/OF5VUqD9iQ1kunAMyUXwQIWf490vWEnG9M+nW5pt8cCbgxp7RwTnC
yw0R9nf4QM2w1dSpb4pYfei/2BtJfHBvJ+3O27G/xGyPuOGrZ3xg9iri3yb2
TqLBI7enMp0POsU048JxOZH5e0/070w+kHcp//G6spKM9BrR48hj9Zfw2JV2
u5v07IvqlC3kgyx8+PyavyMkeGtEbnnPB72pGwSC5GbIGR/PtjOfWfYrn492
RXEy6wc4rt6s4WO9p7vS5Jd4mRlHk7QyvvPBs7wM4UWmANPjeEtIXxsfPHVp
y3qdIsLEwwHruXpY+RdhS0WUOHPVSfEm+X4++K60/ZispxRzeuRNIDHEB/6J
pdnGk9LMOt89Gk7jfBCdOGnUpCTLfDU2/N1/hg/0p7oTtNrkmBF+UZduLfJB
y5r84ZRQeeahCXXVLHYq7DDQtvGolGeiMxW11TxUyBLTSl16Lc+UmvI4/5ef
CuUmo8tH1eWZk2c5lHnoVFDbXSL6854ss3Y68auiOBUCo6Q1zJNkmC/PEeew
NBUE7qptC7q0itnYctiGS54KxMN/VvI+kkzWy3z9Z2UqGKxzPOJgJc5cn1JM
iVGnAvUURXO1kSjTkdLXY6NJBQbl0MQjYwYz5Bj9vYQOFaLP3nQyOkFjZtRu
edCqT4VUk5dDrx8LMn/pep19YkQFm6tyRl6JVCbX/VhrL2MqfIrOylv/nZe5
Yalw7VpTlr6guODrNm6mk9tvnlELKnC5PZ7UXuBghpULd+fupoJV+OVcb052
Zpa6IfmfLRX4KUWXTL8uky3RHvfQPipw70jddezgIskzHnOa8yAVFCjCZjrf
5smN9gVWle5UKF1KEbnEPk8eKOxRjz5MBX3fo7ySl+fICFkhbptjVODBk75m
6+fI3GCDTvFTVOiSGCmNXZglO/64F7WcpYLdjpoP637MktSd0XeSzlMhKEzm
Oy11ltyU+e6U5xUqCP+12/l33yzpKtJtqRFKBQdu40Kp1hny+jkBtZEIKsRM
dlTYr54h37boceZGUyFOnM+H3XSa7MJu7QFxVOATf1Bw032KFEi5XkDcpUJr
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
2iBTOgycKVV+62eKuk9dSiAedBCJ3nGgr5WEQw/GTJta0GHHkbDFaYbGWM34
qk3JHjq4Z+p0Be7Zi9vXpj6k76MD2bTpX9Eaa3yGliEbZE2HmZzIS5Y0G6yw
cDdk0JYOdqK+n1q9rHDzUP6AqQMdzvon7plK2YN9Xj3YXuJIh+ue21yXzOzA
9IrKe3Qngs/6rUEdqzbgunS8POgQgb8gUgsbL8Vu4Y98Bl0IPQneu2teKYMk
jzW/NnUj7ssm0Sk9CqjSsmV9iQcdPGJag9WLqciR8+Y6/RjRX3hXxGm/nzxh
xZ6/gd50ePd+1w5/JXlcJNZ3YNCXDn2pusnZHurY6udQg6k/HS6pDWqua1DH
892j/5UE0MGmtENqmyMT322YvEQ/Tegr49w+vXpJZHbv17fAs3RYurqM9/zV
GjQVP79z8Dzhl5UZ70L6N6K004IlpsF0WHJr/DZj42Zk5CRKKQkl9Og5m31o
whCNGkueoofTYednDXHZQCOUqEntCbxIh4MK03+Ym7cgfTqbOxhJhwvbH0VN
6WxE/Qvyt02v0OHpjXIy/z85FPVFWbAkhg5rrsesdbkqjbVbVh+hx9Ph/Bf5
p2eTVHB3hc6zwEQ6jLiTYtPC1uKQmxtXDybRYfV5k4MFQ2uxSsSmONMUOgjl
vi86Gq+OW49t/fkglQ6JW7/zLZ0U8al9plb0dDpYOWWr2/rRsRzaXR14iw4d
V8zZkdKCuEnRmj14mw6KJlEe/1ZP8nzE9weZ3qFDgslOob/mSzB9yrn/QTYd
DDw25H/woODaHret9Dw6XAsVK/32TR67PvLKDcynw/vza+eX+6hgiXx/scFC
OpTRTcqTdTRwRcIZL9NiOsDeWuF+OXXseCa47UEJHVwibtQ+Y67Cws4RuvRy
OliY5qVdd1+CC3dcSQ6sJPRdG6WXXyaKLLUS/gxUE/7Q2qM5ny6D/tJT9pvy
6DC6xTnXmbcK3Vl0s+4Bnw7LRzQ3OOX8h8yGs1bR6+nQuqN/6mmDIppqyYsI
fEQHtaqDXspb5NGNyvtfBx4T/MbWkfNLqciyor00sIkOtVttn9xo/sMRL58+
T39OB+P+Sc7e1T28x6V045KXRL7U9/omHx/iBZYYSJu1Euf7dN/5eOQpR++B
4/vBdjqUXJZY+DjyizN+PyQ76A0dVAR4tiWjQiiv6I4Po5MOk+Y6jw7uFUHO
hU/1S7vp4F/mX31E9i+HVTAiaP6B8G9Og/Strm5ex73lLUMf6fDlcln0SvUl
ODpP83pwPx0icsbOP/u2Am/L3XuIOUiHN+ft45ylyHghO2B12ReCD1e5F5PK
FFx19/qs+Qgxr9YdrLQAaex7h1f/ZZTIc8VTHT+8hLFa1sfLIT8IP2QVXv/W
2sX7fFvAijVJh+xE2caxVT84aRn/yZVPEfnRtLR904tZzr5bxiM7Z+nwJzBX
sYw7w5G4ebRs+DcdFvo97jT8+c55mhYTGPqXDicTsnPeP+jkBN94YMxeIN4X
z4GgNLIMZ2Nqh3TFYgZkwCtfUngiZzJl9v0uQQZoXrs9LTzbxclPZuZ8FWYA
m2HUw9j9g3P4GvK9sIwB9ZmuBfc+/uLIJB00kBFnQEPess1NKguct4kXhCol
GDCWFyg2en6BE5uQ3WIhxYARxvuufS9nOMbxzddHSAw4dV/20q+MDs7iuNFD
YVQG0LRZXFWZT7yamBVrZBnE/aGOH0b3/eD5RWv/qmQxQHvRxT0ulyZ5Glf2
NeyWZQCFw3DrCJ/gDUaduvJNjgEBRzzrPMS+8W5G3rAKX8WATm22oUjVB571
Jb7cSiUGmFRuMthjUsmTvNg3UqXCgEXyl7clPHbjNIcLlu9RZ0Cxmu7go/oa
XmiYctDoagYw+qtroqNe8wwumOyI0GTAwR7ZywF7P/KmQo6R5HQYoMFK8Gf4
9fEKg+M+VK9jQAWtUqtn8Tuea1Bpzt4NxPl2vktMT9hyVga+9f2uzwDxp4Ke
IovbOJ3nfhtcRAwQFOL7K8d3c+LPsoXlgQFmQZnr1s/2cEzObGqt2cKAxtCp
vtD9HZwlp51TLbcywCfom9WYbQ6HdzL88Nh2BmwoevIrxqCLdyIgd80lEwbc
MSK3CHX94K058fyXvDkDYirtVl47N8P74jfW8HAXA4gP4p/f5H7xMo5LRe/b
w4CmzwcOHNwwzbP11bX+YUmcX/ZHpXTbKE/ax1o+0poBFqxVvU6yz3jPvc58
U7BjALdY8Eyw0BAn7Fh6Oc+BAe+nXMxWm/7lIM+6IKsDDDCWoRwSCRBGMx6f
d4w7EXh9FfLZdmLovrswOeowcX6qXuKxNHHk5qbau+oIA6xevNFgUEWR/BGz
XOzOAP8DgR4Vt5agbhfv49aeDGgvuHo+R2GSU+Ysxxz0YsA2h8AHH6sHedEH
2uqP+zJgcpmHRjcWxq4Ooe6L/Al+bRZvtjgqhcFWRyomgAEed5fddVpFxgyr
gSrWaWI9r2015ygJT+5JOph3ltBXZqEVMpfAL3ZtE9ELJPRtMp2Z//kv767Z
7P3GYEKfwdy/nt8mOIE7cq33XGDAVb+X45WtJGSzzXbhYzjBN4WxVunLSqRl
KJpz7BID1hSnhn19qoBE4eHOuSgGhCVuEzKxV0ADHM+ZS9EMcKMGW0psl0F4
o8xNahwDbK45eXjaSqBr619tvZNA8O/MEn1cNsPz0Qn6rpXEgMMWuU9+5Mlh
E03NpNpkBojQDJcsrdXAq1b3ccxTGeCyd42mqpcW/quaMNCdRszXvuZAgp8W
fqtkeMXtFrEffEPDGzXw/VVTOjO3GZBN9+9cayuHL8nd7blwh/D7w/wK79Kf
HGcZqwtSOQx42WXz/spjdWTAXKp+K48BreR9bS9DNiIyrapdo4ABUkcSl8tz
AY2R3M/UFDFg/ptHybaazeipJFPB+AEDZlfH7265uBllLH/e/KaUAaG+bJ/x
qU3ojOg530MVDEi0zxiIfaWP9i5dzZioIvQ6UBCyaocu0hDsrQt8yID1jkf3
DiirIeHFsW7ifAb0tO3Kzb1AQ5/+bZJMrSP0EVpleHhZH6/6z3il8iNCnxtN
t0+mUnHC7O0D5Y8ZoLU8svTnNwXsObVnqWETkQ8qsxdXfVXGWyeW3G99xgA5
pX//lLaoYdmxMivHlwzoH4vcLjOlin+NuMx/a2GA0uHTJ5X+KuG2L9Ts0+0M
GOU/jj5kLY/vDTw1X/qGAcHu/KXfhaRxWN+p6avvGOBsxF7QeV/P2d+rmq7Q
zYAz1jax3fKiaH1Pt1HxewZEL/X+VCZNRpKdl0fRRwZ8v17jtSyOir52cK4+
72PAUGYVM+0SBTW0fTewHWCAJb32hsgiaZT26ubnoSEGmB56ebJ2bhkKeL7r
sv9XBhT01bU8XT/P2dW0SEdglAFRm13+tf4a5Kg8ftAdO/b//P764mpfEkeg
wTlUZoKoO7VzJ5cmcnr4JLX8n0Q+X072Oybcyyl72Ni2YYYBjorelLQrk5yY
qhOnn/wi+uF19YdM/eMcKVeSt5wj9JIntjyLsQRBybumvn8M0K1sf53fvQQx
71/y8V7EBHqFylhA1zznZ/5G+j8BJoQJOnL17/RxXuSO1EYJMeGURv3BEcsR
XvbdG0foIkyI1G99apfwjxeUabYiW5QJqybYJWoGgtjm1r8KneVM2LbwULfu
pzDWTityrF/BBHtD9s/cOWFcKqq0cpU0E5pYN16L3hTEuqfTP4aRmXBpr9dC
zPgCr+ILOWOIyoRhw/MRjasmeXpWVw4aM5gg4/m5KO1sLa+qcYn8PRYTLrp6
HY1L+MTR1znbJybLhDofyoaGl185D29P3j4mxwSrWzE3zniMcDiSHs4tCkwY
nTwk2Mgc5PAD+xS0/mPC01SLqEHdLs6m7zafE5SZECd6w3z0NObU2bdmTaky
od4pZXZXdQVvy7Pth600mJDgZiDx+2wd79GGWsWqNUxYNPBjQq8ig2OUs36Q
ocUEzee8TUfb2jhPKEV3z+ow4cA1L+3dqv2c7WH/uX5Yx4SVyu2yHSXfOE2T
aUqbNjDhWq9hpq/OJMfEifwlQ58JDmJDO+LipznPWy7nCCAmSJCeXoo7OMsx
4y5xO7yJCRoHp521xGY5rwrOqDzZzIS+/aEm8n9+cnaxJoeVjZggytkicEPt
G6c10j0vchsTck/Ir3tL/cDZ8+uT+zdjgl+ZtChb41bOa1cbNXNTYl4nWV+m
215wLN+0jBSZE3guTUs4T77hvDXcni9pwYQ7vvGJJgX9HOsS/tHje4j132oX
p8O+czrl1mt0WDLhaPp6vVr7aY5dbOHoOmuCz7e0gbs1fzk9/xQLk22ZYFoQ
+WCdgQBy8Ew79tueCcr32kwV+oTQh27SGntHJmgfPiEmbiOCHHdcHuMdZEKe
ydAxWuwy9KlS4L7sISYYu5ZaSSUsQ05KZ7yDXZjwTedJ57SnCOq/OrG2/wgT
erkJ98fVhdHhJe7jhh5M2DNpVr2/RwAN+n4qvuvJhIGwAwMJK/5xXD9Z+y71
ZoK4TXRf/9lJzpedLVruvkwghzFi/Y26OG542+QzPyaMU7pH7I1beSPq/BKN
AEL/Eesmbgp/4R1NXecXc4oJL5xEHd40/+CNihTqjJ9hgo9s+uFh+gTP66Ti
1O7zTJi67D/StniM92PwRllpEDGPov1Pbf7283wsSScoocS8c8fVHQ+n8SYa
otadDGPC7wcWZm8vDXOOawnMdEYQ6513+ad8/3Kmbp2u0I9kwrPVH748rBdE
JyQmAtIuM0FAoL4y4JgImjnnpjcfzQRZ15veb7jL0KlvH2cPxDGh6k6c49sN
S9FvW+uq+gSidnxRF+0ogM40vTq1KongX+n6P1PXac7f9ds2hicTfHK/XZz5
kcY5fxf/HrrOhNAFrS9dpD+8edK6GuM0JhQXvbocHySOg0MLzty7SeBZ97H+
hiIZL55YZSB+mwnvv1Fek4/RcOiBG3PHspgwWbr9dTWJjgVfSfNa7jIhODIJ
lpKoOJwTdU4rlwkgsmqNj4sUpjfI3nlyjwkqK7otx64I4HvbS5/bFxL+yR0P
+Wj/iYNebv85fp8JX3LY1zOTJVHrnvfMiBImmJ33CawPlUXOnT5bWOVM2EIZ
OBZxahWa3i/kUVzJhLeXQ8e7PiqiS5+vx2+tYULJAYEbLkdWIab7mupuHhMO
9lafFpqXQQVjDZ+8a5ng1pdy8zDxXm/ytxYRaiD8dyzZXpQxy2v//W1taiMT
GiKnMt0D5PDhoGDrtU+ZcDysUX3ZAQ08I0gJamxmworIkPTDxCd2ZFRetu0L
JuxUF3v0CWljtiT31dgrQl8+GQ5DmzVxUVL79IU2Jli8EP5ykayMgXVEhtFB
6C2scDRrjSR+nTFnVPSWCXtNaX3uFAZyVYrzNOxign4NMh3+oo1+5Ste7exh
wppeytm4DRx0Wav64bFeJtQIdznR9wGSrTT/LNDHBIosRUaAAqiY0y+a8pkJ
NymvL5Pu6iPDhgDt1UNEHk4vidQV0URvt4vZNQwT/Jzqrjwq0Mpxe3krxPob
E6gCA7vmn+jiuT26eaPfmeDx9/BwkeZWHNPZ1BoyzoRWnbtn2u+YYjnH/b+o
Pwn9OK2UuRpjjks/T6wsmGaCXUdh3OVuE7zNPWL75l9MaF/XqcI8YYg7x5je
b/8QeupuVc1TXY09/O9fO/qPCSSde6sV/HTQv9+G/EWLWDC876aIza2dKC6o
czBJgAXCH+1b5d5YIQWhY8vVhVjQeyXIv0vdDpVHLV5Xt5QFnuX17fzNtshY
8prDPlEWtAp87IwQtETdSWphI+IscC19s9ztkRE6xqrND1rBAmP6Mxub56vx
ott7X5OlWfB+IVqqzcQKJygN/8kjs6Bzv4y1yuJD+L+CcwqbaCxYVPqSWrTo
CK7SkjLpYLDg+LcgKSfSEWxSedfXnc0CBcmAsdMqh/AHjv71eVkW1CnpXBR0
tMI+Da/qEuWJ3683NT+7VQYJGB8aVlFkwdyFJTtcdZ3Q1ZezK/hKLJDr1Jtf
dc8bKe+9ordXlQWCyb4iRbnHUU2n3IFhdRZkvLw1jUi+yMyxPOL8GhaICIUm
aqu4ot7PO4qktVgQvGX6rNq+/5Cve++bHB0WkFWk5Fbv9cSCP47/46wn1knF
9lfKgvE1/6X/tW9gQZnGq9SwyCtY5c8NsyMGLPj0kNvw2DYRPwzS9P+LCHwa
EudWlyfhnUKPb8QDC+gJltkDCkn4U5TtIyVDFrxwdrtH94rHfpJjIw+3smCD
Z7OfV0MYFr4WKr3bmLgvc7ryzbLVKIVF0x8yIfDIpHrWrotG6rfznc6as0B7
U3yNrm0Gck0RzhzYxYKPMhvysu/loIxYp37zPSww+rvHQe5WAeqJ4ClUWrIg
StRm1+5V9xE1kHZIzpoF1/zqTxcQtcWJ41mRtiyw7RbnH7lSgC57vvw8ac8C
ef8I67M7ctCTQyqKDo4sWBivid4SfRMtsr9w+PFBFlA+XBnd+joE6e/pvbPm
EAsuVSxo//oYgU/s2DiY7MKC9cfOuGYWXsfFcPW/xW4sqGbTDHVYt/GI3g8X
Dw8WnPo61xRQnYkV15pkv/ZkQdM2scTKodv4gNLdIY43C4qMzrtXP0jHqTKL
lLN9if0Pzsiui07EHWT7Iyv8WYAXKKzX5iexhHhFzqkAFjHhnpZOm1NoxxKp
4b5TLHCxUHi4NTcShf05qmJ6lsCrmC8e8igG8SeeuJWdZ4F+W7fLtnPR6New
fJ5MMAvUfgmWMTovIp1P575GhBL+WYk6u58GIa9371THw1jQ0aXi8KbVC+W+
0vawvcgCpvjsimf521D/4+h7DZEsSAn4plHarY9l8PCI+hUW5AZ8pcevUEI2
ZYbqSTEssG91W7vK2wEl5N88Oh/HgjQeZ+HI0WPoRebv/COJLIh59sYTkvzR
0lTL0dYkFvx4qtz64ckJtCX+voZ+Cgv41zrc01O80LlLoseyUgk/uNk/6FcT
RxVBLoXi6YReEoT8PERd8ERA3fcTt1jgk0RasbzUE2t4sdZ8vE3U7ztXnvvr
il1dAryM7xB+udN80Mh7M85waCt6kE30e2Cb4t9KD9SzV+MHM48Fozdi6GG+
IYhqenFtWD4LvMV0l4+QY5HFln7v74UssCuTPxjKS0ZRG1GxVTELqDf+Ttoc
zkCPNVPGa0tY4LVGbnHmsSy0SOWnpmo5C/aImi7LibiD9Ffu9E2oZIFz7xf9
Y3ezkD8178FcNQvYUvecPtRmoPvLBScP84j5e3KNLyYnoxHBA9qv+IS+PD4J
o7lQpPi3+rhePbH/dS+/4nEIdvxJLs14xIKdK0Ql/t28ha+PeP9c9oQFbsvS
VcvNC3BH3zMdvybivCRfAYOoEizR9Z//+2eEX/9bfHwupwwbtwaXbX3Jgu73
4bweuzJ84WnPVFELCxp1SM0y5x9gPn/9Ono7kQfv9xaKtOXgX+XxJ0I6iN+f
nWLFlFzG2oWj5SNvWeAw1+BwfHEGOnZn+8zeLhZMI6lkxzsVKPdG5nrcw4JQ
zdAXz5waUH/CvwClXhZYXa3+WX/lCZKJsqmM/cQCzsN9pV/znyKbkNLZX/0E
35cbFRZSH6OEUxIbnAdZ8PdSB8N4XR166e1+6vkXIn+9L+gZWxUiFZc911RG
CH7d6rJGI7JwqJ1BWfgowc/WDVYRVY34wy7F9v4xIl/eh1n2Nb7GG7YuH980
QeThTsvr30u7caL+zPL0n4S+a7/C7r8f8Njaj+p/pok8nxsT1Pf7gHf817TD
+hcLFKVNLph+78R3mA+OlP1hgcb1vp/p3Fa8sCI1XOofC6Bs34ehN3nYTuhC
ltcCC2w6RSLKrr1A5X+O1j9fzIakeN/0NOhHkuOWH1UE2VB3umO9tsR3dHQQ
/QsXZkNRSGPMsfsT6Em3EuuzCBuyC541pp6cRPKtKzaCGBtO1Z/NvtIwjs49
/mWVvpwNYdHr3t0eHEbvavr8/6xgQ+tavwGbe2+QdvGzBGtpNlxyl1i2t60N
R98tLS4js6GKtFsn1HgCD6emvZKisSHjdPPCzoUFbBgXPurFYMO1J9kTT24I
8W+Ge4m+YLGhuzDEjMldxv91xlpFVZYNSxc51tUIi/H3+sC2CDk2KBk4bjGg
ivGLXFQPf1Zgw+UXrrV50cv4IvbSofAfG7Y/3rg7LkaYf8hi7la6MhtE96oH
zOgL8PlbB/AfVTZohg5fa/T4jRkGL3usNdhQEnJT5ciFYeyvWfG7bA0bhIN8
DZ+y61DLf7do0lpsGNR6zvyy7htSY11a563Dhjtfi41WrJxB4ZK+e1+sY0OT
5FrjquI59EnIzld1Axt2mofZGvjOI4O5LbER+kT/Z1JEjoTOo2vj6oWfOWxo
b3z794rwXzQxSH4Om9iQvlt38wW5WWTW8284fTMb8nKElUy//EA5rUPCc4Zs
0OUdfGUX240EnrQo2mxjw4KxV31tQTPe/7BqS7kxG2zSc+OyLQZwVfHtg9Km
bCjN1h882TqKSdlRgd7mbHjW8/bHqn3j2OuGX9qLXWwIffvKkmMxjpvjHGpU
97BBXSfxjNap71gxYmtnhCUbPk4mnXP5/QUHnl0z89mKmLdESG332Cfc5UMj
b7Zlg4q1V4CzWTvWdV2kfdOeDXKB3fV77uXgGPuvu+b2s2Gy7feWRfp89NWi
/ZjNQTbE9RWdmoxrQkbbHl4udyb0cbMzVZLWjG4Z3MmTdmHD+ee03bWOj9Af
zein3kcIvYx8ObZqSxnapxQw+MKdDZ80hFRv+ligYtaBJWqebPC8R05ys7yP
xaSM5S96sWGUY7rkUEc5dhXW2jTgw4bbTWF+12dycf0cY/9mPzb0HI3e3p2c
hdgTAmdvnmDDJs6NpIPTGJ0c+pYyd5Lg96PGpM2ep6i9p6PC5gwbZDNT5KJP
v0Sr23BH+Tk2rNnwae7e+VZ06Un2pHQQ4Zfk/NsJxa1oqr3gZFYIG/4eC/oV
WfsSHfxY8lcnjA0cn7PmA6aP0YtvVSGNEWxYFOJotuV2Idr4iy+8L5INjJHE
TZHNhThb8PHlwctsSHDfoBR2rg5LSz2XDIhhw5930dmCNxtxoExbknA8G56r
n41IftOIR1TfMZMT2dDb+yz0w38N2Gr9h1vK19hwI9di7IPaQ9yw5bNiVQrR
z4qX7Jf7i/GaXV/zjG+wIWj5A4eDS1Nwqv2PNV3pRD/0tatM/I4gYbfpUvcM
oj5xTuw63x0f95/b8CeTDcVJ+2Lt/bJwb/BiftRdgl+SRNbxm1XYNHqpISuX
DWTrtq3Nwk9w1fXlTfn32OBfmVxVdKcVK2aTzDmFbDjRES7wp+AtjithtL+4
z4bPxfHh+3jv8V/+Suv9JWxYe75ZrWhDH3Z7/t/772VsUNRMfZdS9hl3vFN3
Cqwk8kQFPW6pHsQwoDUkUcMGZwludZ7zF1wwrnf0Fo8N5qT2gVbCr/R/aHxt
LeGXniUfz44O47BlRifq6gk/3473VT46jMcpJn8sGtmgES6ed/XlEN6vYBHU
94QNsVXnPz359Bk/W2MleLyZ0NfAivgl/b14vYFDpMALQn8tM69jEttx5nZn
icRXbIA7xjlNh7KwhKVb4qo2NgTX12spqjxDZw560cteE/7vrFPe5fYODXn6
pxu9ZcPwVf+po+g92nP6jMKbTjZ0HKce99rUg2rDg3NcetiQMlR/R4vRgTQS
IjRmPrBBcmT9vqi2apRy88qDiE+En8MHLwgtf4EF8xPW0z6zYfO+h9tZnQPY
pzLlYc4gkXe7ZqXvbfiJ3z+6CRuGCX74G48vE/hHvKd3HjeNsMHk+1HP3IrF
/LL390xsvxN5p9g12zUkwJf/Wtzy9QfRn/mNfUfnFvNjpissz0wSfgzB2xof
/sN/FuMu0WmC35rYmu9jk9hV4pHjjVnifIt9fpulnuN2ZvNn9T9soDaFJlsy
JhBXucWN95fwy4Gkzydthbj3dN58N1sg5kMzXDzznzSXCj3HPyyWgYMeG2bE
amncC2Z9s8cEZSBjl4hx1Fkmd9zmy7l5YRlw2/ZU3kGLyXVw+b44dpkMjMS8
P/CunMpt8v0ZsVJcBth+JygBD1dwdQN/ixVLyIBP7KkNlVPTKCNqIQ6kZMBz
lafSRc3FfPFkIWobSQbO0IxacmKZ/FNZYjecqDKgnA1L8kRU+AP3peQm6TJQ
NthG52dq8i14tLuhLBlolPpWMzmrw+c1yaiRZGUga/Wzj4f/reOrvFl1P0tO
Bl6U7kv2K1jPT+pT1dVdJQPXyu3tPObX8e8dmGlL+U8GEobD9qxh6fL5Hxq8
/ynLAO3pLZWQv5r8dvvY5c5qMvB840vb0I2q/KEu+/wnGjJg8SBu7NR6Nv+P
tcoO9bUycCVjcsUbk0V8ibdTQ7FaMkReBs56jv5DCpb1YVM6MrD1a8Bo9FoS
d317tILtehkYddU6vzuQxTWxsKvDG2QgWSomvfekHNfxlZKjgoEM1EtlWksu
VeAeN/s5F4FkYO3VXtOBEgXuxWe1179tkgGxlRVTIQ0K3DTjK3oWW2RgkcbF
TMVABW7xE5s3ZUbEvBV339fPVeA2Gv3nx9guAwbzeV4bPVdxOxsmJAN3yIBA
RKOj22ZF7ijwi/pNZaAuvDpELl2Ru6g2ymz7Thl4Gxd68enkKi4ZWY/kW8hA
UWrw92el8lyVh6suSe6VASZvUmn9LSaXs3H8vxP7ZEC/pot2/ZUI16KS96jL
mvj9MSTyoH0R//C6SCeunQwEJoS4XDZfyT9dum8h00EGdA2+RLYuVuXHaCmk
Lz0gA6m8vpE3yzT5mffH9D2dZOCVNklJfp82v2L1w87WQzIQ8L8Gyzyc6rSN
44ccSzWWM8rSeR6SnFSyVjT9nnPrmmR7GWpoZmoUiuFlJM6bSMqRUs1Y0quJ
GIxlaEZZxtLvSSZLu6L1lJ00HUtFllOa35/3P/f3ur/fz/e67j9MG35wsaU3
y5Ila/ciSCie5M/ctqFd5tt0fwlGgFv2L7/WbEXfFhtfngtBsFwkdqu1WUlV
zUY8A8IQlAdFLXdqw9SwsG6k9UcE2Z2kQWavQteYHDu5OhKB8Y0P3hqX3jGb
8rzN06IQ2A+NbDZp1SQ+2Kh1UoJg6N4jwVq/xSQk+3XgtzEISkJTgrqmDUm8
Ya3y1ViOv/3jRo4emKRnSfOWxXP3/Oqa9HOjMSla7EWOJ3D8ldCpEpkJaTiD
nsuPIpi8qe1dqWxG2gX/xHglIVgqtdrIU19JBlJr9GqSESSd9TgStGkNmdZM
rDZM4fQY010JKtZk4WnPrYdPIagRtoQ4brchxguEb/p/4vz+2nPiQrMNsTsx
/JNzGgLHZYE1KRPWxFmtevXFDC6fzLu6B/UsyY6kIzd1znI8RuTVBew2IxHz
PIIlWQjOmFeZpD/RI9IjhqqyXzielEIlHjwFk/VpqECcg8D5yZ5Ejw+zbPmh
SsfCXAQByRYL1si1aaPicLd6PoIm1KqUqaVPO2PcD4UVcvzLtiZWRgrp8JT+
kgdFCD4Wze9X34Xpx+jB2nWlCI6XP5CuWoapYOKSz/kyBIVtrf9fdF9IzSLj
Jz5d5PRde+445yK6Ydw1PbACwSZx4Nu6ZCPqEa5ndeMyAtrzj11+nDH1l/ff
sahGcO7iw4rTa4ypJKQiNP0vBBU4vqRhsZCmDMdpTNVxfbPIC3qRKKAX9roU
f3eF03caePFdSze79dtgqdpVBEHS34u2TOsTdY/k3ZXXEHR+3zcc67eCsI5F
xO86gv/0WjpeiLUikWublyxoRaDQStXEozZEZD4wXXMDwYogHUmvty15Lpz3
yP82Ak2F+Za/o6xJmrZJpeY9BGSetP63L1YSJxXH1Pr7CPQj2rzyPzcgiim/
sL2dCLqEt0xoax9T8TreVfAYQXQOOxjXw6d7unNE9CmCWUum0TpLmxp2XFEJ
eY7ArDFf5ZREm95rkfUu6kawoyHAWuOhOpXWz9JrvQjm8/MWPAqdYR3+MMgO
G0AwXe5t8PLdZXb0V/sYg5cIVMoccvfcesoUZPr6NL/i/P/NPbPL/292+wmJ
7T45t3+HYG5o3zv2s0OZ2mgMgWn1nS+itZVpU0TVSNsbBM8b088tHeHT/wV2
3Iya4PqJ3SW6ozy6ejvXwCmuTz2WVmGe1Uyvm07S7RkEez/+3DdAlclZsZX/
gQ+cvqFY9pWpFnGz9RSbfkJw4WS0fUmDgPBE4cJ2JQy1qKQgoVRAqg1Pz8Sq
YAj8oStDw0uThGiWPxKpYZBvzzY6o8EjRsq3Kjs0MEBkQfjRuB62c/JV6uGF
GJbsC70N67nf55V6+CotDN9sKHvvvFGVil+I3B7rYBgMDut4YcunE+1OKxJ1
MQwEZKXLV/Ho79f38C31MLS5jDlIo9+yfrXSvmcGGI6LlaJ0ZzpY3fKCq8eE
3Dy5pEGmxjI3cpuybYwwuCL9FBlqZuMzemO6lmJQ0ohybbSXs7bJPN8UUwyF
/A2lTVMKdvigkd06EYYqv51n6hvn0ZxwotNnjmFC9Cxn/gyfevvvHD29GoMg
mRdzcr0yVfOJu+VgieG942sWLxpmr7icLxm0xqByrOyNybk3zD6mPinNDkOL
xX2t4xlzjJn1U39mPQZ6XumEbGiOkZlOi185YFi2tGuzYO49k6qvhzI3YugX
PEjfVD7EbF64bhbEGOy7I69rnMplZj9teyx3xPDXU7O17Xkd7J/v9ldlfYkh
IaEtobMhiw18mZ725RYM7SaRO+P7nzEGskvh4y4YctdvtCt9OMTcvdvulu2O
oT42q9JpUM4kNo2tcPbEsLOqf+SzjHHGvkZTdcILw7nRA1EjaW+ZkVKL/txt
XD6zZ+s22E8y+TnujW6+GELUx3q/fjLN+KaF5kx9g0FnzGVlIFEwC5NSDhbs
wFAeUdyE7imYawdKfT39MPDFW9g651lG8t82O8VuDInRTZ0/Br9nVu16qVMc
iCGSZ+DzunOM6dmqOuYdxPkZ4ac2LnrG/AuOzRrS
          "]]}, 
        Annotation[#, "Charting`Private`Tag$10485#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
uySBYrEWf5ju1OZkaN2QwLT3ozNM/w/jcBzN
          "]]}, 
        Annotation[#, "Charting`Private`Tag$10485#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
/wHtwfEc
          "]]}, 
        Annotation[#, "Charting`Private`Tag$10485#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
       None}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     Ticks -> {Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
     AxesOrigin -> {0., 0}, FrameTicks -> {{Automatic, Automatic}, {Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "ClippingRange" -> {{{1.5512045835800167`*^-7, 
        7.6009023044216235`}, {-7.391955548875323*^-9, 
        0.9999999812322561}}, {{1.5512045835800167`*^-7, 
        7.6009023044216235`}, {-7.391955548875323*^-9, 0.9999999812322561}}}},
      DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
       None}, PlotRange -> NCache[{{0, 
         Log[2000]}, {-7.391955548875323*^-9, 0.9999999812322561}}, {{
        0, 7.600902459542082}, {-7.391955548875323*^-9, 0.9999999812322561}}],
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"AllC\"", "\"AllD\"", "\"Disc\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8200810853940153`*^9, 3.8200810968372097`*^9}, {
   3.8200812210681353`*^9, 3.8200812586474133`*^9}, 3.820081408157959*^9, {
   3.820081466654299*^9, 3.820081503700451*^9}, 3.820081594253648*^9, 
   3.820081647920909*^9, 3.820081687229175*^9, {3.8200819103817453`*^9, 
   3.820081923555613*^9}, 3.820081964278356*^9, {3.820082164956017*^9, 
   3.820082207296153*^9}, {3.820082587135119*^9, 3.820082708925095*^9}, 
   3.820082762056464*^9},
 CellLabel->
  "Out[241]=",ExpressionUUID->"6c7d6eab-caa8-4921-a749-6e881f8d4fc2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Mean", " ", "frequencies", " ", "of", " ", "good", " ", "individuals"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Gx", "=", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"gx", "==", 
        RowBox[{
         RowBox[{"g", "*", "\[Epsilon]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "g"}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Epsilon]"}], ")"}]}]}]}], "/.", 
       RowBox[{"{", 
        RowBox[{"g", "->", 
         RowBox[{
          RowBox[{"fx", "*", "Gx"}], "+", 
          RowBox[{"fy", "*", "gy"}], "+", 
          RowBox[{"fz", "*", "gz"}]}]}], "}"}]}], ",", "gx"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gy", "=", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"gy", "==", 
         RowBox[{
          RowBox[{"g", "*", "e2"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "g"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "e2"}], ")"}]}]}]}], "/.", 
        RowBox[{"{", 
         RowBox[{"g", "->", 
          RowBox[{
           RowBox[{"fx", "*", "gx"}], "+", 
           RowBox[{"fy", "*", "gy"}], "+", 
           RowBox[{"fz", "*", "gz"}]}]}], "}"}]}], ",", "gy"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gz", "=", 
     RowBox[{
      RowBox[{"E", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"g", "*", "\[Epsilon]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "g"}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "e2"}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "E"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"g2", "*", "\[Epsilon]"}], "+", 
         RowBox[{"d2", "*", 
          RowBox[{"(", 
           RowBox[{"e2", "+", "1", "-", "\[Epsilon]"}], ")"}]}], "+", 
         RowBox[{"b2", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "e2"}], ")"}]}]}], ")"}]}]}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.818879147080394*^9, 3.818879152504822*^9}, {
   3.81887919717898*^9, 3.818879207457469*^9}, 3.818879349235546*^9, {
   3.818879493157209*^9, 3.818879614288805*^9}, {3.8188797145055523`*^9, 
   3.818879740718988*^9}, {3.818880173906374*^9, 3.818880178928743*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"f49f2c5e-6d9d-4605-b7cf-83a3da4cc655"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Expected", " ", "payoffs"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalPi]x", " ", "=", " ", 
     RowBox[{
      RowBox[{"b", "*", 
       RowBox[{"(", 
        RowBox[{"fx", "+", 
         RowBox[{"fz", "*", "gx"}]}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", "e1"}], ")"}]}], "-", 
      RowBox[{"c", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", "e1"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalPi]y", " ", "=", " ", 
     RowBox[{"b", "*", 
      RowBox[{"(", 
       RowBox[{"fx", "+", 
        RowBox[{"fz", "*", "gx"}]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"1", "-", "e1"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalPi]z", " ", "=", " ", 
     RowBox[{
      RowBox[{"b", "*", 
       RowBox[{"(", 
        RowBox[{"fx", "+", 
         RowBox[{"fz", "*", "gx"}]}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", "e1"}], ")"}]}], "-", 
      RowBox[{"c", "*", "g", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", "e1"}], ")"}]}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.818874350394252*^9, 
  3.818874439837556*^9}},ExpressionUUID->"c8d59aae-5b10-4221-bda9-\
cf75b1f2c00e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Vector", " ", "field"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"VF", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"fx", "*", 
       RowBox[{"(", 
        RowBox[{"\[CapitalPi]x", "-", 
         RowBox[{"fx", "*", "\[CapitalPi]x"}], "-", 
         RowBox[{"fy", "*", "\[CapitalPi]y"}], "-", 
         RowBox[{"fz", "*", "\[CapitalPi]z"}]}], ")"}]}], ",", 
      RowBox[{"fy", "*", 
       RowBox[{"(", 
        RowBox[{"\[CapitalPi]y", "-", 
         RowBox[{"fx", "*", "\[CapitalPi]x"}], "-", 
         RowBox[{"fy", "*", "\[CapitalPi]y"}], "-", 
         RowBox[{"fz", "*", "\[CapitalPi]z"}]}], ")"}]}], ",", 
      RowBox[{"fz", "*", 
       RowBox[{"(", 
        RowBox[{"\[CapitalPi]z", "-", 
         RowBox[{"fx", "*", "\[CapitalPi]x"}], "-", 
         RowBox[{"fy", "*", "\[CapitalPi]y"}], "-", 
         RowBox[{"fz", "*", "\[CapitalPi]z"}]}], ")"}]}]}], "}"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.818875448535338*^9, 
  3.818875570721945*^9}},ExpressionUUID->"307cd41f-5e1a-44e2-b896-\
5c1f18ee138b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Parameters", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"params", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"b", "\[Rule]", "5"}], ",", 
      RowBox[{"c", "\[Rule]", "1"}], ",", 
      RowBox[{"e1", "\[Rule]", "0.02"}], ",", 
      RowBox[{"e2", "\[Rule]", "0.02"}], ",", 
      RowBox[{"E", "\[Rule]", "0.5"}]}], "}"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.818876429100788*^9, 3.8188764687463417`*^9}, 
   3.8188764996485853`*^9, {3.81887653312195*^9, 
   3.818876535338562*^9}},ExpressionUUID->"0ec5b018-aea2-4a29-b568-\
c03a8a2bd3a1"]
},
WindowSize->{1432, 801},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"29fab764-b491-4f33-8f02-e804223a0376"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 224, 4, 30, "Input",ExpressionUUID->"d714b3ec-b484-4f33-88b9-d06f5f540d84"],
Cell[785, 26, 6002, 168, 346, "Input",ExpressionUUID->"3ee16a46-8bac-4457-920d-99ef21d1fb92"],
Cell[CellGroupData[{
Cell[6812, 198, 5120, 140, 262, "Input",ExpressionUUID->"45ce8b5e-5349-4f5d-85d0-903a1656a4a9"],
Cell[11935, 340, 89457, 1549, 241, "Output",ExpressionUUID->"6c7d6eab-caa8-4921-a749-6e881f8d4fc2"]
}, Open  ]],
Cell[101407, 1892, 2558, 75, 94, "Input",ExpressionUUID->"f49f2c5e-6d9d-4605-b7cf-83a3da4cc655"],
Cell[103968, 1969, 1313, 39, 94, "Input",ExpressionUUID->"c8d59aae-5b10-4221-bda9-cf75b1f2c00e"],
Cell[105284, 2010, 1107, 29, 52, "Input",ExpressionUUID->"307cd41f-5e1a-44e2-b896-5c1f18ee138b"],
Cell[106394, 2041, 616, 15, 52, "Input",ExpressionUUID->"0ec5b018-aea2-4a29-b568-c03a8a2bd3a1"]
}
]
*)

